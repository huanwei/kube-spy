# Your services' namespace in kubernetes
Namespace: "default"

# Your services and it's chaos list
VictimServices:
- name: "http-test-service1"
  ChaosList:
#  - replica: 3
#    ingress: ",delay,50ms"
#    egress: ",delay,50ms"
#  - ingress: ",delay,110ms"
#    egress: ",delay,110ms"
#  - ingress: ",delay,200ms"
#    egress: ",delay,200ms"
#  - ingress: ",delay,300ms"
#    egress: ",delay,300ms"
#  - ingress: ",delay,500ms"
#    egress: ",delay,500ms"
#  - ingress: ",delay,800ms"
#    egress: ",delay,800ms"
#    replica: 4
#    range: 2
- name: "http-test-service2"
  ChaosList:
#  - ingress: ",delay,50ms"
#    egress: ",delay,50ms"
#    replica: 1
#    range: 1
- name: "http-test-service3"
#  ChaosList:
#  - ingress: ",delay,50ms"
#    egress: ",delay,50ms"

# This can override the address of the API server to enable out-of-cluster test
#APIServerAddr: "httpbin.org"

# Every request will carry them, and they can be overridden
APISetting:
#  authToken: "BC594900518B4F7EAC75BD37F019E08FBC594900518B4F7EAC75BD37F019E08F"
#  headers:
#    Content-Type: "application/json"

# These test case will be tested in every loop
TestCaseLists:
- service: "http-test-service1"
  host: "httpbin.org"
  TestCases:
#  - method: "GET"
#    url: "/"
# Set request json body and headers
  - method: "GET"
    url: "/headers"
    headers:
      Content-Type: "application/json"
    body: "{ languages: [ 'Ruby', 'Perl', 'Python', 'c' ] }"

# Set form and files
  - method: "POST"
    url: "/post"
    form:
      first_name: "Jeevanandam"
      last_name:  "M"
    files:
      1: "/tmp/spy.INFO"
      2: "/tmp/spy.INFO"


# Set query params and bearer auth
  - method: "Get"
    url: "/get"
    params:
      data: "a"
    headers:
    authToken: "C6A79608-782F-4ED0-A11D-BD82FAD829CD"

# Set multi value form and params
  - method: "Post"
    url: "/post"
    multiValueForm:
      data:
        - "a"
        - "b"
      text:
        - "c"
    multiValueParams:
      data:
        - "a"
        - "b"
      text:
        - "c"

# Set path params
  - method: "Get"
    url: "/base64/{value}"
    pathParams:
      value: "a3ViZS1zcHk="

## Set basic auth
#  - method: "get"
#    url: "/"
#    BasicAuth:
#      username: "root"
#      password: "123456"


# Client retry settings
ClientSetting:
  retryCount: 0
# unit: milliseconds
  retryWait: 1000
  retryMaxWait: 1000
  timeout: 2000
